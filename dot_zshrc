export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  if ! type "nvm" > /dev/null; then
    unset -f ${NODE_GLOBALS} || true;
    load_nvm
  fi
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc

export PATH="/usr/local/sbin:$PATH"
export ADBLOCK=1
export EDITOR=/usr/bin/vim
export HOMEBREW_NO_ANALYTICS=1
export STARSHIP_CONFIG=~/.config/starship.toml

# Check for secrets file. If it exists, then load the secrets.
FILE="$HOME/.secrets.sh"
if [[ -f "$FILE" ]]; then
	source $FILE
fi

if [ -x "$(command -v starship)" ]; then
	eval "$(starship init zsh)"
fi

